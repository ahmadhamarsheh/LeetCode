public class Solution {
    public int[] TopKFrequent(int[] nums, int k) {
        var frequencyMap = new Dictionary<int, int>();
        foreach (var num in nums)
        {
            if (frequencyMap.ContainsKey(num))
            {
                frequencyMap[num]++;
            }
            else
            {
                frequencyMap[num] = 1;
            }
        } 
        var minHeap = new PriorityQueue<int, int>();
        foreach (var kvp in frequencyMap)
        {
            minHeap.Enqueue(kvp.Key, kvp.Value);
            if (minHeap.Count > k)
            {
                minHeap.Dequeue();
            }
        }
        var result = new List<int>();
        while (minHeap.Count > 0)
        {
            result.Add(minHeap.Dequeue());
        }
        return result.ToArray();
    }
}
