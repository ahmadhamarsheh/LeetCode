/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
public class Solution {
    public bool IsBalanced(TreeNode root) {
        if(root == null){return true;}
        else{
            int left = getDepth(root.left);
            int right = getDepth(root.right);
            return Math.Abs(left - right) <= 1 && IsBalanced(root.left) && IsBalanced(root.right);
        }
    }
    private int getDepth(TreeNode node){
        if(node == null) return 0;
        else{
            return 1 + Math.Max(getDepth(node.left), getDepth(node.right));
        }
    }

}
